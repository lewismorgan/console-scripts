#!/usr/bin/env bash

# Bootstrap for 'Yet Another Dotfiles Manager' to setup my environment.
# Created by Lewis Morgan

# Global npm modules to install
npmModules() {
  echo "Installing npm packages "
  # Gulp
  npm install gulp-cli -g
}

# Java Environments to setup
setupJenv() {
  # Add all java environments using custom jadd script
  jadd
  # Use Java 11 as the global (default is set at system, explicilty define the one we wanna use though as java 11)
  jenv global 11.0
}

writeDefaults() {
  echo "Writing defaults üîñ"
  # Show hidden files on the system in finder (requires a restart once written. Cmd + Shift + . to display hidden files in open dialogs)
  defaults write com.apple.finder AppleShowAllFiles YES

  # iTerm2

  # Specify the preferences directory
  defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "~/iterm2"
  # Use the custom preferences in the directory
  defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
}

# Create a bin folder for user scripts
if [ ! -d "$HOME/bin"]; then
  mkdir $HOME/bin
fi

# Symlink all files in .yadm/bin to bin/*, these are custom scripts
for file in $HOME/.yadm/bin/*; do
  ln -s ${file} $HOME/bin/${file##*/}
done

# install homebrew if it's missing
if ! command -v brew >/dev/null 2>&1; then
  echo "Installing homebrew üç∫"
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

  # Now use the brewfile if it exists
  if [ -f "$HOME/.Brewfile" ]; then
    echo "Installing from the brewfile üçª"
    brew bundle --global
  fi
fi

# Set up the launchd jobs
if [ -d "$HOME/.launchd" ]; then
  echo "Symlinking launch agent definitions üìÅ"
  if [ ! -d "$HOME/Library/LaunchAgents" ]; then
    mkdir $HOME/Library/LaunchAgents
  fi

  ln -s $HOME/.launchd/com.lewisjmorgan.daily.plist $HOME/Library/LaunchAgents
  ln -s $HOME/.launchd/com.lewisjmorgan.weekly.plist $HOME/Library/LaunchAgents
  
  echo "Hooking launch agents up to launchctl üöÄ"
  launchctl load $HOME/Library/LaunchAgents/com.lewisjmorgan.daily.plist
  launchctl load $HOME/Library/LaunchAgents/com.lewisjmorgan.weekly.plist
fi

# iTerm2 Setup
if [ ! -f "$HOME/.iterm2/Broadcast.itermcolorstheme" ]; then
  echo "Downloading iTerm2 Broadcast theme üñ•"
  curl https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/schemes/Broadcast.itermcolorstheme -o $HOME/.iterm/Broadcast.itermcolorstheme 
fi

# Install oh-my-zsh
if [ ! -d "$HOME/.oh-my-zsh" ]; then
  echo "Installing oh-my-zsh üíª"
  git clone https://github.com/robbyrussell/oh-my-zsh.git $HOME/.oh-my-zsh
fi

# Install powerlevel9k
if [ ! -d "$HOME/.oh-my-zsh/custom/themes/powerlevel9k" ]; then
  echo "Setting up PowerLevel9K ‚è´ for oh-my-zsh"
  git clone https://github.com/bhilburn/powerlevel9k.git $HOME/.oh-my-zsh/custom/themes/powerlevel9k
fi

# Handy utility for getting network status. Airport utility is not located within the system path, so just create a symlink.
if [ ! -f "$HOME/bin/airport"]; then
  echo "Creating airport symlink in bin folder ‚úàÔ∏è"
  sudo ln -s /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport $HOME/bin/airport
fi

# Create symlinks for vscode settings if installed
if [ -d "$HOME/Library/Application\ Support/Code" ]; then
  echo "Symlinking vscode settings ‚öôÔ∏è"
  ln -s $HOME/.vscode/settings/settings.json $HOME/Library/Application\ Support/Code/User/settings.json
  # Only have a settings file right now, no custom keybinds or snippets as of yet.
  #ln -s $HOME/.VSCode/keybindings.json /Users/pawelgrzybek/Library/Application\ Support/Code/User/keybindings.json
  #ln -s $HOME/.VSCode/snippets/ /Users/pawelgrzybek/Library/Application\ Support/Code/User/snippets
fi

# Misc setup
npmModules()
setupJenv()
writeDefaults()

echo "Finished setting up the environment! Changing shell to ZSH. üëç"
# Change the shell to ZSH --- Keep this as the last line otherwise nothing will run after.
chsh -s /bin/zsh
